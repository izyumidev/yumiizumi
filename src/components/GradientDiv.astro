---
interface Props {
  vertical?: "start" | "center" | "end";
}

const { vertical } = Astro.props;
---

<div class="container">
  <div class="overlay">
    <slot />
  </div>
</div>
<style>
  .container {
    height: 100dvh;
    width: 100dvw;
    background: rgb(201, 85, 74);
    background: radial-gradient(
      circle,
      hsla(201, 85%, 74%, 1) 4%,
      hsla(227, 87%, 61%, 1) 38%,
      hsla(262, 79%, 45%, 1) 85%
    );
    background: -moz-radial-gradient(
      circle,
      hsla(201, 85%, 74%, 1) 4%,
      hsla(227, 87%, 61%, 1) 38%,
      hsla(262, 79%, 45%, 1) 85%
    );
    background: -webkit-radial-gradient(
      circle,
      hsla(201, 85%, 74%, 1) 4%,
      hsla(227, 87%, 61%, 1) 38%,
      hsla(262, 79%, 45%, 1) 85%
    );
  }
  .overlay {
    display: flex;
    align-items: center;
    justify-content: end;
    flex-direction: column;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: linear-gradient(to top, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));
    background: -moz-linear-gradient(
      to top,
      rgba(0, 0, 0, 1),
      rgba(0, 0, 0, 0)
    );
    background: -webkit-linear-gradient(
      to top,
      rgba(0, 0, 0, 1),
      rgba(0, 0, 0, 0)
    );
    font-size: 40px;
    color: #fff;
    text-align: center;
  }
</style>
{
  vertical && (
    <style
      set:html={`.overlay { justify-content: ${vertical}; ${
        vertical === "start" && "padding-top: 7rem;"
      } }`}
    />
  )
}
